const char* indexHtml = "<html>\n"
"<head>\n"
"    <script>\n"
"        window.onload = function () {\n"
"            var currentTemp = 0;\n"
"            var brewTarget = 100;\n"
"            var steamTarget = 145;\n"
"            var tempOffset = 8;\n"
"            var mode = \'brew\';\n"
"            var brewData = {target: [], output: []};\n"
"            var steamData = {target: [], output: []};\n"
"            var labels = [];\n"
"            var data = {\n"
"                labels: labels,\n"
"                datasets: [{\n"
"                    type: \'line\',\n"
"                    label: \'Temperature\',\n"
"                    data: [],\n"
"                    backgroundColor: function () {\n"
"                        var targetTemp = (mode == \'brew\') ? brewTarget : steamTarget;\n"
"                        if(currentTemp > (targetTemp + 1)) return \'#FF6384\';\n"
"                        if(currentTemp < (targetTemp - 1)) return \'#63D2FF\';\n"
"                        else return \'#63FF8F\';\n"
"                    },\n"
"                    yAxisID: \'y\',\n"
"                }, {\n"
"                    type: \'bar\',\n"
"                    label: \'Output\',\n"
"                    data: brewData.output,\n"
"                    backgroundColor: \"#63FFDD\",\n"
"                    yAxisID: \'y1\',\n"
"                }],\n"
"            };\n"
"\n"
"            const options = {\n"
"                spanGaps: 1000,\n"
"                responsive: true,\n"
"                animations: false,\n"
"                interaction: {\n"
"                    mode: \'nearest\',\n"
"                    axis: \'x\',\n"
"                    intersect: false\n"
"                },\n"
"                plugins: {\n"
"                    decimation: {\n"
"                        enabled: \'true\',\n"
"                        algorithm: \'lttb\',\n"
"                        samples: 10,\n"
"                    },\n"
"                    title: {\n"
"                        display: true,\n"
"                        text: \"Brew Temperature\",\n"
"                    },\n"
"                },\n"
"                scales: {\n"
"                    x: {\n"
"                        type: \'timeseries\',\n"
"                        time: {\n"
"                            unit: \'second\',\n"
"                        },\n"
"                        ticks: {\n"
"                            display:false,\n"
"                        },\n"
"                        title: {\n"
"                            display: true,\n"
"                            text: \"Time\",\n"
"                        },\n"
"                        stepSize: 30,\n"
"                    },\n"
"                    y: {\n"
"                        suggestedMax: brewTarget,\n"
"                        title: {\n"
"                            display: true,\n"
"                            text: \"Temperature\",\n"
"                        },\n"
"                        position: \'left\',\n"
"                        grid: {\n"
"                            color: function(context) {\n"
"                                if(context.tick.value == brewTarget) return \"#FF6384\";\n"
"                            },\n"
"                        },\n"
"                    },\n"
"                    y1: {\n"
"                        suggestedMax: 1000,\n"
"                        title: {\n"
"                            display: true,\n"
"                            text: \"Output\",\n"
"                        },\n"
"                        position: \"right\",\n"
"                    },\n"
"                },\n"
"            }\n"
"\n"
"            const actions = [{\n"
"                name: \"Brew Temps\",\n"
"                id: \"brew\",\n"
"                handler() {\n"
"                    chart.options.scales.y.suggestedMax = brewTarget;\n"
"                    chart.options.plugins.title.text = \"Brew Temperature\";\n"
"                    chart.options.scales.y.grid.color = function(context) {\n"
"                        if(context.tick.value == brewTarget) return \"#FF6384\";\n"
"                    };\n"
"                    chart.data.datasets[1].data = brewData.output;\n"
"                    mode = \'brew\';\n"
"                    chart.update();\n"
"                    updateElements();\n"
"                },\n"
"            }, {\n"
"                name: \"Steam Temps\",\n"
"                id: \"steam\",\n"
"                handler() {\n"
"                    chart.options.scales.y.suggestedMax = steamTarget;\n"
"                    chart.options.plugins.title.text = \"Steam Temperature\";\n"
"                    chart.options.scales.y.grid.color = function(context) {\n"
"                        if(context.tick.value == steamTarget) return \"#FF6384\";\n"
"                    };\n"
"                    chart.data.datasets[1].data = steamData.output;\n"
"                    mode = \'steam\';\n"
"                    chart.update();\n"
"                    updateElements();\n"
"                }\n"
"            }];\n"
"            \n"
"            function updateElements(){\n"
"                var targetTemp = (mode == \"brew\") ? brewTarget : steamTarget;\n"
"                var targetLabel = document.getElementById(\"target_label\");\n"
"                targetLabel.innerHTML = \"Target: \" + targetTemp + \" C\";\n"
"\n"
"                var switchButton = document.getElementById(\"switch_\" + mode);\n"
"                switchButton.classList.add(\"active\");\n"
"\n"
"                var inactiveSwitch = (mode == \"brew\") ? document.getElementById(\"switch_steam\") : document.getElementById(\"switch_brew\");\n"
"                inactiveSwitch.classList.remove(\"active\");\n"
"            }\n"
"\n"
"            function incrementTarget(){\n"
"                if(mode == \'brew\') brewTarget += 0.5;\n"
"                else steamTarget += 0.5;\n"
"                callServer(\"/incrementTarget\", )\n"
"            }\n"
"\n"
"            function decrementTarget(){\n"
"                var targetTemp = (mode == \'brew\') ? brewTarget : steamTarget;\n"
"            }\n"
"\n"
"            const ctx = document.getElementById(\'tempChart\').getContext(\'2d\');\n"
"            var chart = new Chart(ctx, {\n"
"                data: data,\n"
"                options: options,\n"
"            });\n"
"\n"
"            const container = document.getElementById(\'tempContainer\');\n"
"            actions.forEach(function(action){\n"
"                const button = document.getElementById(\"switch_\" + action.id);\n"
"                button.onclick = action.handler;\n"
"            });\n"
"            \n"
"            function callServer(url, method, handler){\n"
"                var xhttp = new XMLHttpRequest();\n"
"                xhttp.onreadystatechange = function(){\n"
"                    if (this.readyState == 4 && this.status == 200) {\n"
"                        handler(this);\n"
"                    }\n"
"                }\n"
"                xhttp.open(method, url, true);\n"
"                xhttp.send();\n"
"            }\n"
"\n"
"            function refreshTemps(){\n"
"                callServer(\"/get_temps\", \"GET\", function(inherit){\n"
"                    var tempData = JSON.parse(inherit.response);\n"
"                    var time = Date.now();\n"
"\n"
"                    brewTarget = tempData.brew.target;\n"
"                    steamTarget = tempData.steam.target;\n"
"                    tempOffset = tempData.offset;\n"
"                    labels.push(time);\n"
"\n"
"                    currentTemp = tempData.temperature;\n"
"                    chart.data.datasets[0].data.push(tempData.temperature);\n"
"                    brewData.output.push(tempData.brew.output);\n"
"                    steamData.output.push(tempData.steam.output);\n"
"                    \n"
"                    if(chart.data.datasets[0].data.length > 120) {\n"
"                        labels.shift();\n"
"                        chart.data.datasets[0].data.shift();\n"
"                        brewData.output.shift();\n"
"                        steamData.output.shift();\n"
"                    }\n"
"\n"
"                    chart.update();\n"
"                    refreshTemps();\n"
"                });\n"
"            };\n"
"            refreshTemps();\n"
"            callServer(\"/get_tunings\", \"GET\", function(inherit){\n"
"                var tempData = JSON.parse(inherit.response);\n"
"                Object.entries(tempData).forEach(entry => {\n"
"                    const [name, value] = entry;\n"
"                    var input = document.getElementById(name);\n"
"                    input.value = value;\n"
"                });\n"
"            });\n"
"        }\n"
"    </script>\n"
"</head>\n"
"<body class=\"container\">\n"
"    <div class=\"chart-container container\" id=\"tempContainer\">\n"
"        <canvas class=\"justify-content-md-center row\" id=\"tempChart\"></canvas>\n"
"        <div class=\"justify-content-md-center row\">\n"
"            <div class=\"switch-button-container col\">\n"
"                <button class=\"btn btn-outline-primary active\" id=\"switch_brew\"> Brew Temps </button>\n"
"                <button class=\"btn btn-outline-primary\" id=\"switch_steam\"> Steam Temps </button>\n"
"            </div>\n"
"            <div class=\"target-button-container col\"> \n"
"                <label class=\"form-label col\" id=\"target_label\"> Target: 100 C</label>\n"
"                <button class=\"btn btn-outline-danger\" id=\"targetplus\"> + </button>\n"
"                <button class=\"btn btn-outline-secondary\" id=\"targetminus\"> - </button>\n"
"            </div>\n"
"            <div class=\"offset-button-container col\"> \n"
"                <label class=\"form-label\"> Offset: 8 C</label>\n"
"                <button class=\"btn btn-outline-danger\" id=\"offsetplus\"> + </button>\n"
"                <button class=\"btn btn-outline-secondary\" id=\"offsetminus\"> - </button>\n"
"            </div>\n"
"        </div>\n"
"    </div>\n"
"    <div class=\"controller-container container\" id=\"tempController\">\n"
"        <label for=\"tunings-form\" class=\"form-label\"> Tunings: </label>\n"
"        <form class=\"row justify-content-md-center\" id=\"tunings-form\">\n"
"            <div class=\"tuning-button input-group col\">\n"
"                <span for=\"kp\" class=\"input-group-text\"> Kp: </span>\n"
"                <input class=\"tuning-input form-control\" type=\"text\" id=\"kp\" value=\"\" placeholder=\"Proportional\" min=\"0\">\n"
"                <button class=\"tuning-button btn btn-outline-secondary\" type=\"button\" id=\"kpplus\"> + </button>\n"
"                <button class=\"tuning-button btn btn-outline-secondary\" type=\"button\" id=\"kpminus\"> - </button>\n"
"            </div>\n"
"            <div class=\"tuning-button input-group col\">\n"
"                <span for=\"kp\" class=\"input-group-text\"> Ki: </span>\n"
"                <input class=\"tuning-input form-control\" type=\"text\" id=\"ki\" value=\"\" placeholder=\"Integral\" min=\"0\">\n"
"                <button class=\"tuning-button btn btn-outline-secondary\" type=\"button\" id=\"kiplus\"> + </button>\n"
"                <button class=\"tuning-button btn btn-outline-secondary\" type=\"button\" id=\"kiminus\"> - </button>\n"
"            </div>\n"
"            <div class=\"tuning-button input-group col\">\n"
"                <span for=\"kp\" class=\"input-group-text\"> Kd: </span>\n"
"                <input class=\"tuning-input form-control\" type=\"text\" id=\"kd\" value=\"\" placeholder=\"Derivative\" min=\"0\">\n"
"                <button class=\"tuning-button btn btn-outline-secondary\" type=\"button\" id=\"kdplus\"> + </button>\n"
"                <button class=\"tuning-button btn btn-outline-secondary\" type=\"button\" id=\"kdminus\"> - </button>\n"
"            </div>\n"
"        </form>\n"
"    </div>\n"
"    <script src=\"https://cdn.jsdelivr.net/npm/chart.js@3.3.2\"></script>\n"
"    <script src=\"https://cdn.jsdelivr.net/npm/moment@2.29.1\"></script>\n"
"    <script src=\"https://cdn.jsdelivr.net/npm/chartjs-adapter-moment@0.1.1\"></script>\n"
"    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-+0n0xVW2eSR5OomGNYDnhzAbDsOXxcvSN1TPprVMTNDbiYZCxYbOOl7+AMvyTG2x\" crossorigin=\"anonymous\">\n"
"    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-gtEjrD/SeCtmISkJkNUaaKMoLD0//ElJ19smozuHV6z3Iehds+3Ulb9Bn9Plx0x4\" crossorigin=\"anonymous\"></script>\n"
"</body>\n"
"</html>";