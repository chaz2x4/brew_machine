const char* indexHtml = "<html>\n"
"<head>\n"
"    <script>\n"
"        window.onload = function () {\n"
"            var defaultBrewTarget = 100;\n"
"            var defaultSteamTarget = 150;\n"
"            var brewData = {target: [], output: []};\n"
"            var steamData = {target: [], output: []};\n"
"            var labels = [];\n"
"            var data = {\n"
"                labels: labels,\n"
"                datasets: [{\n"
"                    type: \'line\',\n"
"                    label: \'Temperature\',\n"
"                    data: [],\n"
"                    borderColor: \"#FF6384\",\n"
"                    backgroundColor: \"#FF6384\",\n"
"                    yAxisID: \'y\',\n"
"                }, {\n"
"                    type: \'bar\',\n"
"                    label: \'Output\',\n"
"                    data: brewData.output,\n"
"                    borderColor: \"#63FFDD\",\n"
"                    backgroundColor: \"#63FFDD\",\n"
"                    yAxisID: \'y1\',\n"
"                }],\n"
"            };\n"
"\n"
"            const options = {\n"
"                spanGaps: 1000,\n"
"                responsive: true,\n"
"                animations: false,\n"
"                interaction: {\n"
"                    mode: \'nearest\',\n"
"                    axis: \'x\',\n"
"                    intersect: false\n"
"                },\n"
"                plugins: {\n"
"                    decimation: {\n"
"                        enabled: \'true\',\n"
"                        algorithm: \'lttb\',\n"
"                        samples: 10,\n"
"                    },\n"
"                    title: {\n"
"                        display: true,\n"
"                        text: \"Brew Temperature\",\n"
"                    },\n"
"                },\n"
"                scales: {\n"
"                    x: {\n"
"                        type: \'timeseries\',\n"
"                        time: {\n"
"                            unit: \'second\',\n"
"                        },\n"
"                        ticks: {\n"
"                            display:false,\n"
"                        },\n"
"                        title: {\n"
"                            display: true,\n"
"                            text: \"Time\",\n"
"                        },\n"
"                        stepSize: 15,\n"
"                    },\n"
"                    y: {\n"
"                        suggestedMax: defaultBrewTarget,\n"
"                        title: {\n"
"                            display: true,\n"
"                            text: \"Temperature\",\n"
"                        },\n"
"                        position: \'left\',\n"
"                        grid: {\n"
"                            color: function(context) {\n"
"                                if(brewData.target.length){\n"
"                                    if(context.tick.value == brewData.target[brewData.target.length - 1]) return \"#FF6384\";\n"
"                                }\n"
"                                else if(context.tick.value == defaultBrewTarget) return \"#FF6384\";\n"
"                            },\n"
"                        },\n"
"                    },\n"
"                    y1: {\n"
"                        suggestedMax: 1000,\n"
"                        title: {\n"
"                            display: true,\n"
"                            text: \"Output\",\n"
"                        },\n"
"                        position: \"right\",\n"
"                    },\n"
"                },\n"
"            }\n"
"\n"
"            const actions = [{\n"
"                name: \"Display Brew Temps\",\n"
"                handler() {\n"
"                    chart.options.scales.y.suggestedMax = defaultBrewTarget;\n"
"                    chart.options.plugins.title.text = \"Brew Temperature\";\n"
"                    chart.options.scales.y.grid.color = function(context) {\n"
"                        if(brewData.target.length){\n"
"                            if(context.tick.value == brewData.target[brewData.target.length - 1]) return \"#FF6384\";\n"
"                        }\n"
"                        else if(context.tick.value == defaultBrewTarget) return \"#FF6384\";\n"
"                    },\n"
"                    chart.update();\n"
"                },\n"
"            }, {\n"
"                name: \"Display Steam Temps\",\n"
"                handler() {\n"
"                    chart.options.scales.y.suggestedMax = defaultSteamTarget;\n"
"                    chart.options.plugins.title.text = \"Steam Temperature\";\n"
"                    chart.options.scales.y.grid.color = function(context) {\n"
"                        if(steamData.target.length){\n"
"                            if(context.tick.value == steamData.target[steamData.target.length - 1]) return \"#FF6384\";\n"
"                        }\n"
"                        else if(context.tick.value == defaultSteamTarget) return \"#FF6384\";\n"
"                    },\n"
"                    chart.update();\n"
"                }\n"
"            }];\n"
"\n"
"            const ctx = document.getElementById(\'tempChart\').getContext(\'2d\');\n"
"            var chart = new Chart(ctx, {\n"
"                data: data,\n"
"                options: options,\n"
"            });\n"
"\n"
"            const container = document.getElementById(\'tempContainer\');\n"
"            actions.forEach(function(action){\n"
"                const button = document.createElement(\'button\');\n"
"                button.innerHTML = action.name;\n"
"                button.onclick = action.handler;\n"
"                container.appendChild(button);\n"
"            });\n"
"\n"
"            var xhttp = new XMLHttpRequest();\n"
"            xhttp.onreadystatechange = function(){\n"
"                if (this.readyState == 4 && this.status == 200) {\n"
"                    var tempData = JSON.parse(this.response);\n"
"                    var time = Date.now();\n"
"                    labels.push(time);\n"
"                    chart.data.datasets[0].data.push(tempData.temperature);\n"
"                    brewData.target.push(tempData.brew.target);\n"
"                    brewData.output.push(tempData.brew.output);\n"
"                    steamData.target.push(tempData.steam.output);\n"
"                    steamData.output.push(tempData.steam.output);\n"
"\n"
"                    if(chart.data.datasets[0].data.length > 120) {\n"
"                        labels.shift();\n"
"                        chart.data.datasets[0].data.shift();\n"
"                        brewData.target.shift();\n"
"                        steamData.target.shift();\n"
"                        brewData.output.shift();\n"
"                        steamData.output.shift();\n"
"                    }\n"
"                    chart.update();\n"
"                    pollServer(this);\n"
"                }\n"
"            }\n"
"            function pollServer(xhttp) {\n"
"                xhttp.open(\"GET\", \"/get_temps\", true);\n"
"                xhttp.send();\n"
"            }\n"
"            pollServer(xhttp);\n"
"        }\n"
"    </script>\n"
"</head>\n"
"<body>\n"
"    <div id=\"tempContainer\" class=\"chart-container\" style=\"position:relative; height:40vh; width:120vh; margin:auto;\">\n"
"        <canvas id=\"tempChart\"></canvas>\n"
"    </div>\n"
"    <div class=\"controller-container\" id=\"tempController\" style=\"display:none\">\n"
"        <div class=\"target-button-container\"> \n"
"            <p> Target: </p>\n"
"            <p id=\"targetTemp\"> 95 C</p>\n"
"            <button id=\"incrementButton\"> + </button>\n"
"            <button id=\"decrementButton\"> - </button>\n"
"        </div>\n"
"        <div>\n"
"            <p> Tunings: </p>\n"
"            <div class=\"tuning-button-container\">\n"
"                <p>Kp:</p>\n"
"                <input class=\"tuning-input\" id=\"kp\" value=\"\">\n"
"                <button class=\"tuning-button\" id=\"kpplus\"> + </button>\n"
"                <button class=\"tuning-button\" id=\"kpminus\"> - </button>\n"
"            </div>\n"
"            <div class=\"tuning-button\">\n"
"                <p>Ki:</p>\n"
"                <input class=\"tuning-input\" id=\"ki\" value=\"\">\n"
"                <button class=\"tuning-button\" id=\"kiplus\"> + </button>\n"
"                <button class=\"tuning-button\" id=\"kiminus\"> - </button>\n"
"            </div>\n"
"            <div class=\"tuning-button\">\n"
"                <p>Kd:</p>\n"
"                <input class=\"tuning-input\" id=\"kd\" value=\"\">\n"
"                <button class=\"tuning-button\" id=\"kdplus\"> + </button>\n"
"                <button class=\"tuning-button\" id=\"kdminus\"> - </button>\n"
"            </div>\n"
"        </div>\n"
"    </div>\n"
"    <script src=\"https://cdn.jsdelivr.net/npm/chart.js@3.3.2\"></script>\n"
"    <script src=\"https://cdn.jsdelivr.net/npm/moment@2.29.1\"></script>\n"
"    <script src=\"https://cdn.jsdelivr.net/npm/chartjs-adapter-moment@0.1.1\"></script>\n"
"    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-+0n0xVW2eSR5OomGNYDnhzAbDsOXxcvSN1TPprVMTNDbiYZCxYbOOl7+AMvyTG2x\" crossorigin=\"anonymous\">\n"
"    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-gtEjrD/SeCtmISkJkNUaaKMoLD0//ElJ19smozuHV6z3Iehds+3Ulb9Bn9Plx0x4\" crossorigin=\"anonymous\"></script>\n"
"</body>\n"
"</html>";